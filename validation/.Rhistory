subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", NO[x])), sep="")  +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
############
sample <- data %>%
group_by(income, scenario_adopt, scenario_sharing, strategy_short) %>% #, grid_type
summarize(
value = round(sum(total_nitrogen_oxide_tonnes)),
)
sample$value = sample$value / 1e3
min_value = min(round(sample$value))
max_value = max(round(sample$value)) + 10
min_value[min_value > 0] = 0
sample = spread(sample, scenario_adopt, value)
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
min_value = min(round(totals$value,2))
max_value = max(round(totals$value,2)) + 1
min_value[min_value > 0] = 0
df_errorbar <-
sample |>
group_by(income, scenario_sharing, strategy_short) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(scenario_sharing, strategy_short) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
ggplot(sample,
aes(x=strategy_short, y=baseline, fill=income)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2.5,
# position = position_dodge(1),
vjust =-.7, hjust =-.2, angle = 0) +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title=expression(paste("Total Cell Site Emissions over 2020-2030 (", NO[x], ") by Infrastructure Sharing Strategy")),
# title = "Cell Site Emissions for Colombia 2020-2030 (Nitrogen Oxides)",
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", NO[x])), sep="")  +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
max_value = max(round(totals$value,2)) + 5
ggplot(sample,
aes(x=strategy_short, y=baseline, fill=income)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2.5,
# position = position_dodge(1),
vjust =-.7, hjust =-.2, angle = 0) +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title=expression(paste("Total Cell Site Emissions over 2020-2030 (", NO[x], ") by Infrastructure Sharing Strategy")),
# title = "Cell Site Emissions for Colombia 2020-2030 (Nitrogen Oxides)",
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", NO[x])), sep="")  +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
View(totals)
min_value = min(round(totals$value,2))
max_value = max(round(totals$value,2)) + 10
min_value[min_value > 0] = 0
df_errorbar <-
sample |>
group_by(income, scenario_sharing, strategy_short) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(scenario_sharing, strategy_short) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
ggplot(sample,
aes(x=strategy_short, y=baseline, fill=income)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2.5,
# position = position_dodge(1),
vjust =-.7, hjust =-.2, angle = 0) +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title=expression(paste("Total Cell Site Emissions over 2020-2030 (", NO[x], ") by Infrastructure Sharing Strategy")),
# title = "Cell Site Emissions for Colombia 2020-2030 (Nitrogen Oxides)",
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", NO[x])), sep="")  +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
############
sample <- data %>%
group_by(income, scenario_adopt, scenario_sharing, strategy_short) %>% #, grid_type
summarize(
value = round(sum(total_sulpher_dioxide_tonnes)),
)
sample$value = sample$value / 1e6
min_value = min(round(sample$value))
max_value = max(round(sample$value)) + 1
min_value[min_value > 0] = 0
sample <- data %>%
group_by(income, scenario_adopt, scenario_sharing, strategy_short) %>% #, grid_type
summarize(
value = round(sum(total_sulpher_dioxide_tonnes)),
)
sample$value = sample$value / 1e6
min_value = min(round(sample$value))
max_value = max(round(sample$value)) + .5
min_value[min_value > 0] = 0
sample = spread(sample, scenario_adopt, value)
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
min_value = min(round(totals$value,2))
max_value = max(round(totals$value,2)) + 1
min_value[min_value > 0] = 0
df_errorbar <-
sample |>
group_by(income, scenario_sharing, strategy_short) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(scenario_sharing, strategy_short) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
ggplot(sample,
aes(x=strategy_short, y=baseline, fill=income)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2.5,
# position = position_dodge(1),
vjust =-.7, hjust =-.2, angle = 0) +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title=expression(paste("Total Cell Site Emissions over 2020-2030 (", SO[x], ") by Infrastructure Sharing Strategy")),
# title = "Cell Site Emissions for Colombia 2020-2030 (Sulphur Oxides)",
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", SO[x])), sep="") +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
sample <- data %>%
group_by(scenario_adopt, scenario_sharing, strategy_short) %>% #, grid_type
summarize(
value = round(sum(total_pm10_tonnes)),
)
sample$value = sample$value / 1e6
sample = spread(sample, scenario_adopt, value)
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
min_value = min(round(totals$value,2))
max_value = max(round(totals$value,2)) + 1
min_value[min_value > 0] = 0
df_errorbar <-
sample |>
group_by(income, scenario_sharing, strategy_short) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(scenario_sharing, strategy_short) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
sample <- data %>%
group_by(income, scenario_adopt, scenario_sharing, strategy_short) %>% #, grid_type
summarize(
value = round(sum(total_pm10_tonnes)),
)
sample$value = sample$value / 1e6
sample = spread(sample, scenario_adopt, value)
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
min_value = min(round(totals$value,2))
max_value = max(round(totals$value,2)) + 1
min_value[min_value > 0] = 0
df_errorbar <-
sample |>
group_by(income, scenario_sharing, strategy_short) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(scenario_sharing, strategy_short) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
ggplot(sample,
aes(x=strategy_short, y=baseline, fill=strategy_short)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2.5,
# position = position_dodge(1),
vjust =-.7, hjust =-.2, angle = 0) +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title=expression(paste("Total Cell Site Emissions over 2020-2030 (", PM[10], ") by Infrastructure Sharing Strategy")),
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", PM[10])), sep="") + #y ="Tonnes of PM10") +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
source("D:/Github/cuba/vis/vis_energy_emissions_global_stack.r", echo=TRUE)
sample <- data %>%
group_by(income, scenario_adopt, scenario_sharing, strategy_short) %>% #, grid_type
summarize(
value = round(sum(total_pm10_tonnes)),
)
sample$value = sample$value / 1e6
sample = spread(sample, scenario_adopt, value)
totals <- sample %>%
group_by(scenario_sharing, strategy_short) %>%
summarize(value = round(sum(baseline), 2))
min_value = min(round(totals$value,2))
max_value = max(round(totals$value,2)) + .5
min_value[min_value > 0] = 0
df_errorbar <-
sample |>
group_by(income, scenario_sharing, strategy_short) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(scenario_sharing, strategy_short) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
pm10 = ggplot(sample,
aes(x=strategy_short, y=baseline, fill=income)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2.5,
# position = position_dodge(1),
vjust =-.7, hjust =-.2, angle = 0) +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title=expression(paste("Total Cell Site Emissions over 2020-2030 (", PM[10], ") by Infrastructure Sharing Strategy")),
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x = NULL, y=expression(paste("Megatonnes of ", PM[10])), sep="") + #y ="Tonnes of PM10") +
scale_y_continuous(expand = c(0, 0), limits = c(0, max_value)) +
scale_fill_viridis_d() +
facet_grid(~scenario_sharing)
############
ggarrange(
energy,
carbon_dioxide,
labels = c("A", "B"),
ncol = 1, nrow = 2)
dir.create(file.path(folder, 'figures', 'global'), showWarnings = FALSE)
path = file.path(folder, 'figures', 'global', 'energy_emissions_sharing.png')
ggsave(path, units="in", width=8, height=7, dpi=300)
dir.create(file.path(folder, '..', 'reports', 'images', 'global'), showWarnings = FALSE)
path = file.path(folder, '..', 'reports', 'images', 'global', 'energy_emissions_sharing.png')
ggsave(path, units="in", width=8, height=7, dpi=300)
while (!is.null(dev.list()))  dev.off()
ggarrange(
nitrogen_dioxide,
suplher_dioxide,
pm10,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
dir.create(file.path(folder, 'figures', 'global'), showWarnings = FALSE)
path = file.path(folder, 'figures', 'global', 'health_emissions_sharing.png')
ggsave(path, units="in", width=8, height=10, dpi=300)
dir.create(file.path(folder, '..', 'reports', 'images', 'global'), showWarnings = FALSE)
path = file.path(folder, '..', 'reports', 'images', 'global', 'health_emissions_sharing.png')
ggsave(path, units="in", width=8, height=10, dpi=300)
while (!is.null(dev.list()))  dev.off()
############
ggarrange(
energy,
carbon_dioxide,
labels = c("A", "B"),
ncol = 1, nrow = 2,
common.legend = TRUE,
legend = 'bottom')
dir.create(file.path(folder, 'figures', 'global'), showWarnings = FALSE)
path = file.path(folder, 'figures', 'global', 'energy_emissions_sharing.png')
ggsave(path, units="in", width=8, height=7, dpi=300)
dir.create(file.path(folder, '..', 'reports', 'images', 'global'), showWarnings = FALSE)
path = file.path(folder, '..', 'reports', 'images', 'global', 'energy_emissions_sharing.png')
ggsave(path, units="in", width=8, height=7, dpi=300)
while (!is.null(dev.list()))  dev.off()
ggarrange(
nitrogen_dioxide,
suplher_dioxide,
pm10,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE,
legend = 'bottom')
dir.create(file.pathfolder, 'figures', 'global'), showWarnings = FALSE)
path = file.path(folder, 'figures', 'global', 'health_emissions_sharing.png')
ggsave(path, units="in", width=8, height=10, dpi=300)
dir.create(file.path(folder, '..', 'reports', 'images', 'global'), showWarnings = FALSE)
path = file.path(folder, '..', 'reports', 'images', 'global', 'health_emissions_sharing.png')
ggsave(path, units="in", width=8, height=10, dpi=300)
while (!is.null(dev.list()))  dev.off()
dir.create(file.path(folder, 'figures', 'global'), showWarnings = FALSE)
path = file.path(folder, 'figures', 'global', 'health_emissions_sharing.png')
ggsave(path, units="in", width=8, height=10, dpi=300)
dir.create(file.path(folder, '..', 'reports', 'images', 'global'), showWarnings = FALSE)
path = file.path(folder, '..', 'reports', 'images', 'global', 'health_emissions_sharing.png')
ggsave(path, units="in", width=8, height=10, dpi=300)
while (!is.null(dev.list()))  dev.off()
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
filename = 'power_emissions_power_options.csv'
data <- read.csv(file.path(folder, '..', 'results', 'global_results', filename))
data$GID_0 = NULL
names(data)[names(data) == 'GID_0'] <- 'country'
data$scenario_adopt = ''
data$scenario_adopt[grep("high", data$scenario)] = 'high'
data$scenario_adopt[grep("baseline", data$scenario)] = 'baseline'
data$scenario_adopt[grep("low", data$scenario)] = 'low'
data$scenario_capacity = ''
# data$scenario_capacity[grep("25_25_25", data$scenario)] = '25 GB/Month'
data$scenario_capacity[grep("50_50_50", data$scenario)] = '50 GB/Month'
# data$scenario_capacity[grep("100_100_100", data$scenario)] = '100 GB/Month'
data <- data[(data$scenario_capacity == '50 GB/Month'),]
data$strategy_short = ''
# data$strategy_short[grep("3G_umts_fiber", data$strategy)] = '3G (F)'
# data$strategy_short[grep("3G_umts_wireless", data$strategy)] = '3G (W)'
data$strategy_short[grep("4G_epc_fiber", data$strategy)] = '4G (F)'
data$strategy_short[grep("4G_epc_wireless", data$strategy)] = '4G (W)'
data$strategy_short[grep("5G_nsa_fiber", data$strategy)] = '5G (F)'
data$strategy_short[grep("5G_nsa_wireless", data$strategy)] = '5G (W)'
data$strategy_power = ''
data$strategy_power[grep("baseline_baseline_baseline_baseline_baseline", data$strategy)] = 'Baseline'
data$strategy_power[grep("baseline_baseline_baseline_baseline_renewable", data$strategy)] = 'Renewables'
data$strategy_short = factor(data$strategy_short, levels=c(
# "3G (F)",
"4G (F)",
'5G (F)',
# "3G (W)",
"4G (W)",
'5G (W)'
))
data$scenario_capacity = factor(data$scenario_capacity,
levels=c('25 GB/Month',
'50 GB/Month',
'100 GB/Month'
))
data$income = factor(data$income,
levels=c('LIC',
'LMIC',
'UMIC',
'HIC'
))
data = data[complete.cases(data),]
data = data %>%
group_by(income,
scenario_adopt, scenario_capacity, strategy_short, strategy_power) %>%
summarise(
# total_energy_annual_demand_kwh = sum(total_energy_annual_demand_kwh),
total_demand_carbon_tonnes = sum(total_demand_carbon_tonnes),
total_nitrogen_oxide_tonnes = sum(total_nitrogen_oxide_tonnes),
total_sulpher_dioxide_tonnes = sum(total_sulpher_dioxide_tonnes),
total_pm10_tonnes = sum(total_pm10_tonnes)
)
############
data$total_demand_carbon_tonnes = data$total_demand_carbon_tonnes / 1e9
data$total_nitrogen_oxide_tonnes = data$total_nitrogen_oxide_tonnes / 1e6
data$total_sulpher_dioxide_tonnes = data$total_sulpher_dioxide_tonnes / 1e6
data$total_pm10_tonnes = data$total_pm10_tonnes / 1e6
long <- data %>%
gather(type, value, -c(
income, scenario_adopt, scenario_capacity, strategy_short, strategy_power))
long$strategy_long <- paste(long$strategy_short, data$strategy_power)
unique(long$strategy_long)
long$strategy_long = factor(long$strategy_long,
levels=c("4G (W) Baseline",
"4G (W) Renewables",
"4G (F) Baseline",
"4G (F) Renewables",
"5G (W) Baseline",
"5G (W) Renewables",
"5G (F) Baseline",
"5G (F) Renewables"
),
labels=c("4G (W)\nBaseline",
"4G (W)\nRenewables",
"4G (F)\nBaseline",
"4G (F)\nRenewables",
"5G (W)\nBaseline",
"5G (W)\nRenewables",
"5G (F)\nBaseline",
"5G (F)\nRenewables"
)
)
long$strategy_short = NULL
long$strategy_power = NULL
long$scenario_capacity = NULL
# long <- data %>%
#   gather(type, value, -c(income,
#     scenario_adopt, strategy_long))
long$type = factor(long$type,
levels=c("total_demand_carbon_tonnes",
"total_nitrogen_oxide_tonnes",
"total_sulpher_dioxide_tonnes",
"total_pm10_tonnes"
),
labels=c(
expression(paste("Teratonnes of ", CO[2])),
expression(paste("Megatonnes of ", NO[x])),
expression(paste("Megatonnes of ", SO[x])),
expression(paste("Megatonnes of ", PM[10]))
))
long = spread(long, scenario_adopt, value)
df_errorbar <-
long |>
group_by(income, type, strategy_long) |>
summarize(
low = sum(low),
baseline = sum(baseline),
high = sum(high)
) |>
group_by(type, strategy_long) |>
summarize(
income = 'LIC',
low = sum(low),
baseline = sum(baseline),
high = sum(high)
)
ggplot(long, aes(x=strategy_long, y=baseline, fill=income)) +
geom_bar(stat="identity", position='stack') +
geom_errorbar(data=df_errorbar, aes(y = baseline, ymin = low, ymax = high),
lwd = 0.5, #position = position_dodge(width = .9),
show.legend = FALSE, width=0.1,  color="#FF0000FF") +
geom_text(data = df_errorbar,
aes(label = paste(round(baseline, 2),"")), size = 2,
# position = position_dodge(1),
vjust =-.5, hjust =-.2, angle = 0)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title="Impact of Shifting Off-Grid Diesel Generators to Renewable Site Power",
fill=NULL,
subtitle = "For 50 GB/Month per user with interval bars reflecting low and high adoption scenarios",
x=NULL, y='') +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis_d() +
facet_wrap(~type, scales = "free", labeller=label_parsed)
path = file.path(folder, 'figures', 'global', 'power_strategies.png')
ggsave(path, units="in", width=8, height=6, dpi=300)
path = file.path(folder, '..', 'reports', 'images', 'global', 'power_strategies.png')
ggsave(path, units="in", width=8, height=6, dpi=300)
while (!is.null(dev.list()))  dev.off()
source("D:/Github/open-rigbi/vis/scenario_statistics.r", echo=TRUE)
