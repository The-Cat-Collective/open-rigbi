group_by(year, climatescenario, probability) %>%
summarize(
key = 'mean',
value = sum(cell_count_baseline)
)
# historical = inunriver[inunriver$climatescenario == '000000000WATCH',]
# historical_v2 = historical
# historical_v2$key = "mean"
# historical_v2 = historical_v2[duplicated(historical_v2),]
# historical = rbind(historical, historical_v2)
# inunriver = inunriver[inunriver$climatescenario != 'Historical',]
inunriver = rbind(inunriver, historical_v2)
rm(historical_v2)
inunriver$value = inunriver$value/1e3
inunriver = spread(inunriver, key, value)
max_y_value = max(inunriver$mean)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,1),"")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.7, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Cells (Millions)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+3)) +
facet_wrap(~year, ncol=4, nrow=1)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,1),"")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.7, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Cells (Millions)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+300)) +
facet_wrap(~year, ncol=4, nrow=1)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,1),"")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.7, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Sites (Thousands)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+300)) +
facet_wrap(~year, ncol=4, nrow=1)
inunriver = data %>%
group_by(iso3, country, continent, radio,
year, climatescenario, returnperiod, probability) %>%
summarize(
low = min(cost_usd_baseline),
mean = round(mean(cost_usd_baseline),0),
high = max(cost_usd_baseline)
)
inunriver = inunriver %>% ungroup()
inunriver = select(inunriver, year, climatescenario, returnperiod,
probability, low, mean, high)
inunriver = gather(inunriver, "key", "value", low, mean, high)
inunriver = inunriver %>%
group_by(year, climatescenario, probability, key) %>%
summarize(value = sum(value))
historical_v2 = historical %>%
group_by(year, climatescenario, probability) %>%
summarize(
key = 'mean',
value = sum(cost_usd_baseline)
)
# historical = inunriver[inunriver$climatescenario == '000000000WATCH',]
# historical_v2 = historical
# historical_v2$key = "mean"
# historical_v2 = historical_v2[duplicated(historical_v2),]
# historical = rbind(historical, historical_v2)
# inunriver = inunriver[inunriver$climatescenario != 'Historical',]
inunriver = rbind(inunriver, historical_v2)
rm(historical, historical_v2)
inunriver$value = inunriver$value/1e9
inunriver = spread(inunriver, key, value)
max_y_value = max(inunriver$mean)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,0),"Bn")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.9, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Damage Cost (USD Billions)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+95)) +
facet_wrap(~year, ncol=4, nrow=1)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,0),"Bn")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.9, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Damage Cost (USD Billions)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+20)) +
facet_wrap(~year, ncol=4, nrow=1)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,0),"Bn")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.9, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Damage Cost (USD Billions)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+10)) +
facet_wrap(~year, ncol=4, nrow=1)
ggplot(inunriver,
aes(x=probability, y=mean, fill=climatescenario)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(data=inunriver,
aes(y=mean, ymin=low, ymax=high),
position = position_dodge(1),
lwd = 0.2,
show.legend = FALSE, width=0.5,  color="#FF0000FF") +
geom_text(aes(label = paste(round(mean,0),"Bn")), size = 1.8,
position = position_dodge(1), vjust =.5, hjust=-.9, angle = 90)+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle=45, hjust=1)) +
labs(colour=NULL,
title = "Estimated Riverine Flooding Impact to Mobile Voice/Data Cells",
subtitle = "Reported by Annual Probability, Year, and Climate Scenario.",
x = "Annual Probability", y = "Damage Cost (USD Billions)", fill=NULL) +
theme(panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=3, title='Scenario')) +
scale_fill_viridis_d(direction=1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+5)) +
facet_wrap(~year, ncol=4, nrow=1)
########################################################
########################################################
#####Tropical storms
folder = dirname(rstudioapi::getSourceEditorContext()$path)
data_directory = file.path(folder, 'results')
setwd(data_directory)
metric_files <- list.files(data_directory, pattern="STORM")
empty_df <- data.frame(iso3=character(),
iso2=character(),
country=character(),
continent=character(),
radio=character(),
# network=character(),
cell_count_low=numeric(),
cell_count_baseline=numeric(),
cell_count_high=numeric(),
cost_usd_low=numeric(),
cost_usd_baseline=numeric(),
cost_usd_high=numeric()
)
import_function = lapply(metric_files, function(x) {
df <- read.csv(x, header = T, sep = ",")
df_merge <- merge(empty_df, df, all = T)
df_merge$file <- x
return(df_merge)})
data <- do.call(rbind, import_function)
data = data[(data$radio != 'LTE' | data$radio != 'UMTS'),]
data = data[complete.cases(data[ , c('radio')]), ]
rm(empty_df, import_function)
data = data %>%
separate(file,
into = c(
"storm",
"fixed",
"return",
"periods",
"model",
"rp",
"year",
"rp2"),
sep = "_",
convert = TRUE)
data$probability = ''
# data$probability[data$rp == 10] = "10%" # (1/10) * 100 = 50%
# data$probability[data$rp == 50] = "2%" # (1/50) * 100 = 10%
data$probability[data$rp == 100] = "1%" # (1/100) * 100 = 10%
data$probability[data$rp == 200] = "0.5%" # (1/200) * 100 = 4%
data$probability[data$rp == 500] = "0.2%" # (1/500) * 100 = 2%
data$probability[data$rp == 1000] = "0.1%" # (1/1000) * 100 = 1%
data$probability[data$rp == 10000] = "0.01%" # (1/10000) * 100 = .4%
data = select(data, #iso3,
continent,
#cell_count_baseline,
cost_usd_baseline,
model, probability)
# unique(data$probability)
data$probability = factor(data$probability,
levels=c('0.01%','0.1%', '0.2%','0.5%','1%'#,
#'2%','10%'
)
)
data = data[
data$probability == '0.01%' |
data$probability == '0.1%' |
data$probability == '0.2%' |
data$probability == '0.5%' |
data$probability == '1%',]
data = data[complete.cases(data),]
data$model = factor(data$model,
levels=c(
"constant",
"CMCC-CM2-VHR4",
"CNRM-CM6-1-HR",
"EC-Earth3P-HR",
"HadGEM3-GC31-HM"),
labels=c(
"Historical",
"CMCC-CM2-VHR4",
"CNRM-CM6-1-HR",
"EC-Earth3P-HR",
"HadGEM3-GC31-HM"),
)
source("C:/Users/eoughton/Desktop/Github/open-rigbi/vis/global_aggregate_estimates.R", echo=TRUE)
###################
##### Coastal flooding
folder = dirname(rstudioapi::getSourceEditorContext()$path)
folder
###################
##### Coastal flooding
folder = dirname(rstudioapi::getSourceEditorContext()$path)
data_directory = file.path(folder, '..', 'validation')
setwd(data_directory)
data = read_csv('scenario_stats.csv')
data$flooded_area_km2 = gsub("-", 'NA', data$flooded_area_km2)
data$flooded_area_km2 = as.numeric(as.character(data$flooded_area_km2))
data$flooded_area_km2 = round(data$flooded_area_km2 / 1e6,3)
data = data[data$hazard == 'inuncoast',]
country_info = read_csv(file.path(folder, '..', 'data','raw', 'countries.csv'))
country_info = select(country_info, iso3, continent, flood_region)
data = merge(data, country_info,by="iso3")
# write_csv(data, file.path(folder,'initial_country_scenario_stats.csv'))
data = data[
data$climate_scenario == 'historical' |
data$climate_scenario == 'rcp4p5' |
data$climate_scenario == "rcp8p5",]
data$climate_scenario = factor(data$climate_scenario,
levels=c("historical","rcp4p5","rcp8p5"),
labels=c("Historical","RCP4.5","RCP8.5")
)
data$return_period = factor(data$return_period,
levels=c(
"rp0100",
"rp0250",
"rp0500",
"rp1000"
),
labels=c(
"1-in-100-Years",
"1-in-250-Years",
"1-in-500-Years",
"1-in-1000-Years"
)
)
#convert to probability_of_exceedance
data$probability = ''
data$probability[data$return_period == "1-in-100-Years"] = "1%" # (1/100) * 100 = 1%
data$probability[data$return_period == "1-in-250-Years"] = "0.4%" # (1/250) * 100 = .4%
data$probability[data$return_period == "1-in-500-Years"] = "0.2%" # (1/500) * 100 = .2%
data$probability[data$return_period == "1-in-1000-Years"] = "0.1%" # (1/1000) * 100 = .1%
data$probability = factor(data$probability,
levels=c(
"0.1%",
"0.2%",
"0.4%",
"1%"
)
)
data$interaction = paste(data$climate_scenario, data$year)
data$interaction = factor(data$interaction,
levels=c(
"Historical hist",
"Historical 2030",
"Historical 2050",
"Historical 2080",
"RCP4.5 2030",
"RCP8.5 2030",
"RCP4.5 2050",
"RCP8.5 2050",
"RCP4.5 2080",
"RCP8.5 2080"),
labels = c(
"Historical\n1980",
"Historical\n2030",
"Historical\n2050",
"Historical\n2080",
"RCP4.5\n2030",
"RCP8.5\n2030",
"RCP4.5\n2050",
"RCP8.5\n2050",
"RCP4.5\n2080",
"RCP8.5\n2080"),
)
data$continent = factor(data$continent,
levels=c(
"Africa",
"Asia",
"Europe",
"North America",
"Oceania",
"South America"
),
labels=c(
"Africa",
"Asia",
"Europe",
"North\nAmerica",
"Oceania",
"South\nAmerica"
)
)
unique(data$flood_region)
data$flood_region = factor(data$flood_region,
levels=c(
"Brazil",
"Central America & Caribbean",
"China",
"Japan & Korea",
"Middle East & North Africa",
"North America",
"Oceania",
"Rest of FSU",
"Russia",
"South America",
"South Asia",
"Southeast Asia",
"Sub-Saharan Africa",
"Western Europe"
),
labels=c(
"Brazil",
"CAC", #Central America\n& Caribbean
"China",
"Japan & Korea",
"MENA", #"Middle East\n& North Africa",
"N. America", #"North\nAmerica",
"Oceania",
"Rest of FSU",
"Russia",
"S. America", #"South\nAmerica",
"S. Asia", #"South\nAsia",
"SE. Asia", #"Southeast\nAsia",
"SSA", #"Sub-Saharan\nAfrica",
"W. Europe" #"Western\nEurope"
)
)
# write_csv(data, file.path(folder,'country_scenario_stats.csv'))
data_continent = data %>%
group_by(interaction, continent, probability, climate_scenario) %>%
summarize(
# mean_depth = mean(mean_depth, na.rm = TRUE),
flooded_area_km2 = sum(flooded_area_km2, na.rm = TRUE)
)
df_errorbar <-
data_continent |>
group_by(continent, interaction, probability) |>
summarize(
# low = sum(low),
flooded_area_km2 = sum(flooded_area_km2),
# high = sum(high)
) |>
group_by(interaction, probability) |>
summarize(
continent = 'Africa',
# low = sum(low),
flooded_area_km2 = sum(flooded_area_km2),
# high = sum(high)
)
max_y_value = max(df_errorbar$flooded_area_km2, na.rm=TRUE)
ggplot(data_continent,
aes(x=interaction, y=flooded_area_km2, fill=continent)) + #, income_group
geom_bar(stat="identity", position='stack') +
geom_text(data = df_errorbar, aes(label = paste(round(flooded_area_km2,2),"m")),
size = 1.5,
# position = position_dodge(1),
vjust =-.5, hjust =.5, angle = 0) +
theme(legend.position = '',
axis.text.x = element_text(angle=90, hjust=1, vjust=.5, size=7)) +
labs(colour=NULL,
title = "Global Sum of Flooded Coastal Area by Scenario",
subtitle = "Reported by Continent, Annual Probability, Year and Climate Scenario.",
x = "", y = "Flooded Area (km^2)", fill=NULL) +
theme(legend.position = 'bottom', panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=7, title='Continent')
) +
scale_fill_viridis_d(direction=-1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+(max_y_value/4))) +
facet_wrap(~probability, ncol=4, nrow=1)
data_region = data %>%
group_by(interaction, flood_region, probability, climate_scenario) %>%
summarize(
# mean_depth = mean(mean_depth, na.rm = TRUE),
flooded_area_km2 = sum(flooded_area_km2, na.rm = TRUE)
)
df_errorbar <-
data_region |>
group_by(flood_region, interaction, probability) |>
summarize(
# low = sum(low),
flooded_area_km2 = sum(flooded_area_km2),
# high = sum(high)
) |>
group_by(interaction, probability) |>
summarize(
flood_region = 'Brazil',
# low = sum(low),
flooded_area_km2 = sum(flooded_area_km2),
# high = sum(high)
)
max_y_value = max(df_errorbar$flooded_area_km2, na.rm=TRUE)
ggplot(data_region,
aes(x=interaction, y=flooded_area_km2, fill=flood_region)) + #, income_group
geom_bar(stat="identity", position='stack') +
geom_text(data = df_errorbar, aes(label = paste(round(flooded_area_km2,2),"m")),
size = 1.5,
# position = position_dodge(1),
vjust =-.5, hjust =.5, angle = 0) +
theme(legend.position = '',
axis.text.x = element_text(angle=90, hjust=1, vjust=.5, size=7)) +
labs(colour=NULL,
title = "Global Sum of Flooded Coastal Area by Scenario",
subtitle = "Reported by Flood Region, Annual Probability, Year and Climate Scenario.",
x = "", y = "Flooded Area (km^2)", fill=NULL) +
theme(legend.position = 'bottom', panel.spacing = unit(0.6, "lines")) +
expand_limits(y=0) +
guides(fill=guide_legend(ncol=7, title='Flood\nRegion')
) +
scale_fill_viridis_d(direction=-1) +
scale_x_discrete(expand = c(0, 0.15)) +
scale_y_continuous(expand = c(0, 0), limits=c(0, max_y_value+(max_y_value/4))) +
facet_wrap(~probability, ncol=4, nrow=1)
source("C:/Users/eoughton/Desktop/Github/open-rigbi/vis/scenario_statistics.r", echo=TRUE)
